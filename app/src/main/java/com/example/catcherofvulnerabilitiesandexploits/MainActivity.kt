package com.example.catcherofvulnerabilitiesandexploits

import android.os.Bundle
import android.widget.Toast
import androidx.activity.result.contract.ActivityResultContracts
import androidx.appcompat.app.AppCompatActivity
import com.google.android.gms.maps.CameraUpdateFactory
import com.google.android.gms.maps.GoogleMap
import com.google.android.gms.maps.OnMapReadyCallback
import com.google.android.gms.maps.model.LatLng
import com.google.android.gms.maps.model.MarkerOptions
import com.google.android.material.appbar.MaterialToolbar
import com.google.android.material.floatingactionbutton.FloatingActionButton
import retrofit2.Call
import retrofit2.Callback
import retrofit2.Response
import retrofit2.Retrofit
import retrofit2.converter.gson.GsonConverterFactory


class MainActivity : AppCompatActivity(), OnMapReadyCallback {

    private val startForResult =
        registerForActivityResult(ActivityResultContracts.StartActivityForResult()) {
            if (it.resultCode == RESULT_OK) {
                ;
            }
        }

    private val cveShelf = CVEShelf()

    private val retrofit = Retrofit.Builder()
        .addConverterFactory(GsonConverterFactory.create())
        .baseUrl("https://app-f25a0629-b7d6-4dc2-897b-fd8fb1987bf4.cleverapps.io")
        .build()

    private val cveService = retrofit.create(CveService::class.java)

    private lateinit var googleMap: GoogleMap

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        cveService.getAllCves()
            .enqueue(object : Callback<List<CVE>> {
                override fun onResponse(
                    call: Call<List<CVE>>,
                    response: Response<List<CVE>>
                ) {
                    val allCves: List<CVE> = response.body()!!
                    for (cve in allCves) {
                        cveShelf.addCVE(cve)
                    }
                    displayCVEListFragment()
                }

                override fun onFailure(call: Call<List<CVE>>, t: Throwable) {
                    Toast.makeText(this@MainActivity, t.message, Toast.LENGTH_SHORT).show()
                }
            })

        val toolbar = findViewById<MaterialToolbar>(R.id.toolbar)

        val listButton = toolbar.findViewById<FloatingActionButton>(R.id.listButton)
        listButton.setOnClickListener {
            displayCVEListFragment()
        }

        val mapsButton = toolbar.findViewById<FloatingActionButton>(R.id.mapsButton)
        mapsButton.setOnClickListener {
            displayMapsFragment()
        }

        val infoButton = toolbar.findViewById<FloatingActionButton>(R.id.infoButton)
        infoButton.setOnClickListener {
            displayInfoFragment()
        }
    }

    override fun onMapReady(googleMap: GoogleMap) {
        this.googleMap = googleMap

        // Move the camera to San Francisco
        googleMap.moveCamera(
            CameraUpdateFactory.newLatLngZoom(
            LatLng(37.7749, -122.4194), 12.0F
            ))

        // Add a marker to San Francisco City Hall
        val marker = googleMap.addMarker(
            MarkerOptions()
            .position(LatLng(37.7833, -122.4167))
            .title("San Francisco City Hall")
            .snippet("City Hall of San Francisco"))
    }

    private fun displayCVEListFragment() {
        val fragmentTransaction = supportFragmentManager.beginTransaction()
        val fragment = CVEListFragment.newInstance(cveShelf.getAllCVEs())
        fragmentTransaction.replace(R.id.a_main_lyt_fragment_container, fragment)
        fragmentTransaction.commit()
    }

    private fun displayInfoFragment() {
        val fragmentTransaction = supportFragmentManager.beginTransaction()
        val fragment = InfoFragment.newInstance()
        fragmentTransaction.replace(R.id.a_main_lyt_fragment_container, fragment)
        fragmentTransaction.commit()
    }

    private fun displayMapsFragment() {
        val fragmentTransaction = supportFragmentManager.beginTransaction()
        val fragment = MapsFragment()
        fragmentTransaction.replace(R.id.a_main_lyt_fragment_container, fragment)
        fragmentTransaction.commit()
    }
}
