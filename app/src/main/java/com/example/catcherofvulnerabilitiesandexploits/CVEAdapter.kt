package com.example.catcherofvulnerabilitiesandexploits

import android.content.Intent
import android.view.LayoutInflater
import android.view.ViewGroup
import android.widget.Button
import android.widget.TextView
import androidx.activity.result.contract.ActivityResultContracts
import androidx.appcompat.app.AppCompatActivity
import androidx.recyclerview.widget.RecyclerView
import com.google.android.material.floatingactionbutton.FloatingActionButton

class CVEAdapter(private val CVEs: ArrayList<CVE>): RecyclerView.Adapter<CVEViewHolder>() {

    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): CVEViewHolder {
        val row = LayoutInflater.from(parent.context).inflate(R.layout.row_cve, parent, false)
        val button = row.findViewById<FloatingActionButton>(R.id.r_cve_txv_details_button)

        button.setOnClickListener {
            val intent = Intent(parent.context, CVEDetailsActivity::class.java)
            intent.putExtra("id", row.findViewById<TextView>(R.id.r_cve_txv_id).text)
            intent.putExtra("date_published", row.findViewById<TextView>(R.id.r_cve_txv_date_published).text)
            intent.putExtra("date_last_modified", row.findViewById<TextView>(R.id.r_cve_txv_date_last_modified).text)
            intent.putExtra("vulnerability_status", row.findViewById<TextView>(R.id.r_cve_txv_vulnerability_status).text)
            intent.putExtra("impact_score", row.findViewById<TextView>(R.id.r_cve_txv_impact_score).text)
            intent.putExtra("description", row.findViewById<TextView>(R.id.r_cve_txv_description).text)
            parent.context.startActivity(intent)
        }
        return CVEViewHolder(row)
    }

    override fun onBindViewHolder(holder: CVEViewHolder, position: Int) {
        val (id, datePublished, dateLastModified, vulnerabilityStatus, impactScore, description) = CVEs[position]

        holder.txvId.text = id
        holder.txvDatePublished.text = datePublished
        holder.txvDateLastModified.text = dateLastModified
        holder.txvVulnerabilityStatus.text = vulnerabilityStatus
        holder.txvImpactScore.text = impactScore.toString()
        holder.txvDescription.text = description
    }

    override fun getItemCount(): Int {
        return CVEs.size
    }

    fun refreshData(newCVEs: ArrayList<CVE>) {
        CVEs.clear()
        CVEs.addAll(newCVEs)
    }
}
